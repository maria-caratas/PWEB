{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\todo-app2\\\\src\\\\IntrebariForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IntrebariForm = ({\n  onSubmit,\n  initialIntrebare\n}) => {\n  _s();\n  const [intrebare, setIntrebare] = useState(initialIntrebare || {\n    textIntrebare: '',\n    optiuniRaspuns: [],\n    raspunsCorect: 0\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setIntrebare({\n      ...intrebare,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/Intrebari${initialIntrebare ? `/${initialIntrebare.intrebareId}` : ''}`, {\n        method: initialIntrebare ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(intrebare)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      onSubmit(intrebare);\n      setIntrebare({\n        textIntrebare: '',\n        optiuniRaspuns: [],\n        raspunsCorect: 0\n      });\n    } catch (error) {\n      console.error('Error submitting data: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text Intrebare:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"textIntrebare\",\n        value: intrebare.textIntrebare || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Optiuni Raspuns:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"optiuniRaspuns\",\n        value: intrebare.optiuniRaspuns.join(','),\n        onChange: e => setIntrebare({\n          ...intrebare,\n          optiuniRaspuns: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Raspuns Corect:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"raspunsCorect\",\n        value: intrebare.raspunsCorect || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Salveaza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(IntrebariForm, \"VEBP4BPkdg1FiHjDCeSJRZODUsQ=\");\n_c = IntrebariForm;\nexport default IntrebariForm;\nvar _c;\n$RefreshReg$(_c, \"IntrebariForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IntrebariForm","onSubmit","initialIntrebare","_s","intrebare","setIntrebare","textIntrebare","optiuniRaspuns","raspunsCorect","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","intrebareId","method","headers","body","JSON","stringify","ok","Error","error","console","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","join","split","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/todo-app2/src/IntrebariForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst IntrebariForm = ({ onSubmit, initialIntrebare }) => {\n    const [intrebare, setIntrebare] = useState(initialIntrebare || { textIntrebare: '', optiuniRaspuns: [], raspunsCorect: 0 });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setIntrebare({ ...intrebare, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`/api/Intrebari${initialIntrebare ? `/${initialIntrebare.intrebareId}` : ''}`, {\n                method: initialIntrebare ? 'PUT' : 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(intrebare),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            onSubmit(intrebare);\n            setIntrebare({ textIntrebare: '', optiuniRaspuns: [], raspunsCorect: 0 });\n        } catch (error) {\n            console.error('Error submitting data: ', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>Text Intrebare:\n                <input type=\"text\" name=\"textIntrebare\" value={intrebare.textIntrebare || ''} onChange={handleChange} />\n            </label>\n            <label>Optiuni Raspuns:\n                <input type=\"text\" name=\"optiuniRaspuns\" value={intrebare.optiuniRaspuns.join(',')} onChange={(e) => setIntrebare({ ...intrebare, optiuniRaspuns: e.target.value.split(',') })} />\n            </label>\n            <label>Raspuns Corect:\n                <input type=\"number\" name=\"raspunsCorect\" value={intrebare.raspunsCorect || ''} onChange={handleChange} />\n            </label>\n            <button type=\"submit\">Salveaza</button>\n        </form>\n    );\n};\n\nexport default IntrebariForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}